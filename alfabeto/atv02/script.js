document.addEventListener("DOMContentLoaded", () => {
  const audioButton = document.querySelector(".audio-icon"); // Bot√£o de √°udio
  const options = document.querySelectorAll(".letter"); 
  const feedback = document.getElementById("feedback"); 
  const nextButton = document.getElementById('next-button');

  let nextLetter = "j"; 
  let audioPlayed = false; // Para garantir que o √°udio foi tocado antes da sele√ß√£o

  // Redirecionar ao clicar no bot√£o "Pr√≥ximo"
  if (nextButton) {
    nextButton.addEventListener("click", () => {
      window.location.href = "/alfabeto/atv03/atv03.html";
    });
  } else {
    console.error('Bot√£o "Pr√≥ximo" n√£o encontrado!');
  }

  // Reproduzir o som ao clicar no bot√£o de √°udio
  audioButton.addEventListener("click", () => {
    const audioPath = audioButton.getAttribute("data-audio");
    const audio = new Audio(audioPath);
    audio.play();

    audioPlayed = true; 
  });

  // Verificar a sele√ß√£o do usu√°rio
  options.forEach((option) => {
    option.addEventListener("click", () => {
      if (audioPlayed) {
        const selectedLetter = option.getAttribute("data-pair"); // Captura a letra selecionada

        // Verificar se a letra selecionada √© a correta
        if (selectedLetter === nextLetter) {
          feedback.textContent = "Correto! üéâ";
          feedback.style.color = "green"; 
          
          // Desabilitar o bot√£o de op√ß√£o correta
          option.style.pointerEvents = "none"; // Desabilitar a intera√ß√£o com a letra correta
          option.style.backgroundColor = "lightgreen"; 

          // Avan√ßar para a pr√≥xima letra ap√≥s o acerto
          nextLetter = getNextLetter(nextLetter); 
        } else {
          feedback.textContent = "Tente novamente! ‚ùå";
          feedback.style.color = "red";

          setTimeout(() => {
            feedback.textContent = "";
          }, 3000);
        }
      }
    });
  });

  // Fun√ß√£o que determina a pr√≥xima letra da sequ√™ncia
  function getNextLetter(currentLetter) {
    const alphabet = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"];
    const currentIndex = alphabet.indexOf(currentLetter);
    return alphabet[currentIndex + 1] || null;
  }
});
